os:
  - linux
compiler:
  - gcc
env:
  - WANT_SHADERS_GL=on
before_install:
  - if [ `uname` = "Linux" ]; then
       export DISPLAY=:99.0;
       sh -e /etc/init.d/xvfb start;
       sudo apt-get update;
       sudo apt-get install -y libvorbis-dev libtheora-dev libwebp-dev libphysfs-dev libopusfile-dev libdumb1-dev libflac-dev libpulse-dev libgtk2.0-dev pandoc libcurl4-nss-dev libenet-dev pulseaudio libasound2-dev libopenal-dev;
    elif [ `uname` = "Darwin" ]; then
       brew update && brew install opusfile libvorbis webp freetype flac physfs dumb theora enet;
    fi
  - git clone https://github.com/liballeg/allegro5.git
  - cd allegro5
  - mkdir build
  - cd build
    - |
      if [ `uname` = "Linux" ]; then
         cmake .. -DCMAKE_BUILD_TYPE=Debug -DWANT_SHADERS_GL=$WANT_SHADERS_GL -DWANT_CURL_EXAMPLE=on
         make
         . ../tests/grab_bitmap_suites.sh
         find ../tests -name '*.ini' | grep -v 'compressed' | xargs tests/test_driver | tee /tmp/test_out
         grep -q 'failed tests: 0' /tmp/test_out
         sudo make install
         sudo ldconfig
         gcc ../misc/install_test.c -o install_test $(pkg-config --cflags --libs allegro_image-debug-5 allegro_ttf-debug-5 allegro_acodec-debug-5 allegro_dialog-debug-5 allegro_primitives-debug-5 allegro_video-debug-5)
         pulseaudio -D
         ./install_test
      elif [ `uname` = "Darwin" ]; then
         cmake .. -DWANT_SHADERS_GL=$WANT_SHADERS_GL -G Xcode
         xcodebuild
      fi
  - cd ..
  - cd ..
  #- sudo apt-get update
  #- sudo add-apt-repository -y ppa:allegro/5.2
  #- sudo apt-get -y install liballegro5-dev
  # - sudo apt-get -y libfreetype6-dev  valgrind
  - git clone https://github.com/LukeMS/absdatatypes-c.git
  - cd absdatatypes-c && sudo make install --file=linux.makefile && cd ..
  - git clone https://github.com/LukeMS/zhash-c.git
  - cd zhash-c && sudo make install --file=linux.makefile && cd ..
  - git clone https://github.com/LukeMS/eventmgr-c.git
  - cd eventmgr-c && sudo make install --file=linux.makefile && cd ..
install:
  - make all --file=linux.makefile
before_script:
  # https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI
  #- "export DISPLAY=:99.0"
  #- "sh -e /etc/init.d/xvfb start"
  #- sleep 3 # give xvfb some time to start
  #- ls -A resources/gfx/tile_feature/
script:
  # should improve gdb messages, but doesn't work (not sure why)
  #- git clone https://github.com/jeremie-koenig/glibc /opt/src/glibc
  #- make gdb --file=linux.makefile
  - make run --file=linux.makefile
  #- make valgrind --file=linux.makefile # lots of errors
after_script:
  - cat dnf_log.txt